// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class TC05AsignarcursoaprofesorTest {
    private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void tC05Asignarcursoaprofesor() {
    driver.Navigate().GoToUrl("http://25.76.110.243:8030/");
    driver.FindElement(By.LinkText("Teacher")).Click();
    driver.FindElement(By.LinkText("Assign Course To Teacher")).Click();
    driver.FindElement(By.Id("submitButton")).Click();
    {
      var element = driver.FindElement(By.Id("submitButton"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    {
      var element = driver.FindElement(By.TagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    Assert.That(driver.FindElement(By.Id("DepartmentId-error")).Text, Is.EqualTo("Please select department!"));
    Assert.That(driver.FindElement(By.Id("TeacherId-error")).Text, Is.EqualTo("Please select the teacher Name!"));
    Assert.That(driver.FindElement(By.Id("CourseId-error")).Text, Is.EqualTo("Please select semester!"));
    driver.FindElement(By.Id("DepartmentId")).Click();
    {
      var dropdown = driver.FindElement(By.Id("DepartmentId"));
      dropdown.FindElement(By.XPath("//option[. = 'Patologia']")).Click();
    }
    driver.FindElement(By.Id("DepartmentId")).Click();
    driver.FindElement(By.Id("TeacherId")).Click();
    {
      var dropdown = driver.FindElement(By.Id("TeacherId"));
      dropdown.FindElement(By.XPath("//option[. = 'Karla Guevara']")).Click();
    }
    driver.FindElement(By.Id("TeacherId")).Click();
    {
      string value = driver.FindElement(By.Id("CreditTobeTaken")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("4"));
    }
    {
      string value = driver.FindElement(By.Id("CreditTaken")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("4"));
    }
    driver.FindElement(By.Id("CourseId")).Click();
    {
      var element = driver.FindElement(By.Id("CreditTobeTaken"));
      Boolean isEditable = element.Enabled && element.GetAttribute("readonly") == null;
      Assert.False(isEditable);
    }
    {
      var element = driver.FindElement(By.Id("CreditTaken"));
      Boolean isEditable = element.Enabled && element.GetAttribute("readonly") == null;
      Assert.False(isEditable);
    }
    driver.FindElement(By.Id("CourseId")).Click();
    {
      var dropdown = driver.FindElement(By.Id("CourseId"));
      dropdown.FindElement(By.XPath("//option[. = '567890']")).Click();
    }
    driver.FindElement(By.Id("CourseId")).Click();
    {
      string value = driver.FindElement(By.Id("Name")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("Patologia 1"));
    }
    {
      var element = driver.FindElement(By.Id("Name"));
      Boolean isEditable = element.Enabled && element.GetAttribute("readonly") == null;
      Assert.False(isEditable);
    }
    {
      string value = driver.FindElement(By.Id("Credit")).GetAttribute("value");
      Assert.That(value, Is.EqualTo("4"));
    }
    {
      var element = driver.FindElement(By.Id("Credit"));
      Boolean isEditable = element.Enabled && element.GetAttribute("readonly") == null;
      Assert.False(isEditable);
    }
    driver.FindElement(By.Id("submitButton")).Click();
    Assert.That(driver.FindElement(By.CssSelector("p:nth-child(4)")).Text, Is.EqualTo("Assigned successfully"));
    driver.Close();
  }
}
